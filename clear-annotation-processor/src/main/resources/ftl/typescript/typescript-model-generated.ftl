/// <reference path='../refs.ts'/>

/**
 * Generated by Typescript generator.
 *
 * Don't edit this file. It will be overwritten during next generation.
 */

module ${package}.generated {
  'use strict';

  export class ${classSimpleName}_ {

    jsonChangedProperties:string[] = [];

    private addChangedProperty(name:string) {
      if (this.jsonChangedProperties == null) this.jsonChangedProperties = [name];
      else if (this.jsonChangedProperties.indexOf(name) == -1) this.jsonChangedProperties.push(name);
    }

    isChanged():boolean {
      return this.jsonChangedProperties != null && this.jsonChangedProperties.length > 0;
    }

<#list fields as field>
<#if field.name != 'jsonChangedProperties'>
    private _${field.name}:${field.type};
    get ${field.name}():${field.type} {
      return this._${field.name};
    }
    set ${field.name}(value:${field.type}) {
      if (this._${field.name} == value) return;
      addChangedProperty('${field.name}');
      this._${field.name} = value;
    }

</#if>
</#list>

    copyFromObject(source) {
      this.jsonChangedProperties = source.jsonChangedProperties;
<#list fields as field>
    <#if field.name != 'jsonChangedProperties'>
      this._${field.name} = source.${field.name};
    </#if>
</#list>
    }

    toObject(insert:boolean):Object {
      var result:Object = {'jsonChangedProperties':this.jsonChangedProperties};
<#list fields as field>
  <#if field.key>
      result.${field.name} = this.${field.name};
  <#else>
      if (insert || this.jsonChangedProperties.indexOf('${field.name}') != -1)
        result.${field.name} = this.${field.name};
  </#if>

</#list>
      return result;
    }
  }
}



